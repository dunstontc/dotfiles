# priority -50

snippet encoding "Encoding for files with multibyte characters" b
scriptencoding utf-8
endsnippet

snippet gvar "Global / configuration variable" b
if !exists("g:${1:MyUltraImportantVar}")
  let g:$1 = ${2:"${3:<tab>}"}
endif
endsnippet

snippet guard "script reload guard" b
if exists('${1:did_`!p snip.rv = snip.fn.replace('.','_')`}') || &cp${2: || version < 700}
  finish
endif
let $1 = 1$3
endsnippet

snippet func "function" b
function! ${1:function_name}($2) ${3:abort}
  ${4:" code}
endfunction
endsnippet

snippet ifelse "if else"
if ($1)
  $2
else
  $3
endif $4
endsnippet

# ==============================================================================

snippet execute "execute('{command}')"
  execute(${2:'$1'})$0
endsnippet


# ==============================================================================
#  Plugins
# ==============================================================================

snippet cdap "call dein#add('plugin')"
call dein#add('${1:plugin}')$0
endsnippet

snippet cdaf "call dein#add('filetype support')"
call dein#add('${1:plugin}', {'lazy':1, 'on_ft': [${2:languages}]})$0
endsnippet

snippet cdal "call dein#add('lazy')" b
call dein#add('${1:plugin}', {
      \ 'lazy'  : 1,
      \ '${2:condition}': '$3',
      \\})$0
endsnippet

snippet menu_item "Quickmenu Item" b
call g:quickmenu#append(
      \ '${1:name}',
      \ '${2:command}',
      \ '${3:description}',
      \ '${4:filetypes}', 0, '${5:shortcut}')
endsnippet

# ==============================================================================
#  Dividers
# ==============================================================================


snippet divider "Divider" b
" ==============================================================================
endsnippet

snippet section "Section Divider" b
" ==============================================================================
"  === ${1:title} ===
" ==============================================================================
$0
endsnippet

# vim:ft=snippets:
