{
  // ===========================================================================
  // Classes & Modules
  // ===========================================================================
  "Module definition": {
		"prefix": "module",
		"body": [
			"module ${1:ModuleName}",
			"\t$0",
			"end",
		]
	},
  "Class definition with initialize": {
		"prefix": "class init",
		"body": [
      "# $1",
      "class ${2:ClassName}",
      "\t# @return [void]",
			"\tdef initialize()",
			"\t\t$0",
			"\tend",
			"end",
		]
  },
  "Class definition": {
		"prefix": "class",
		"body": [
      "# $1",
			"class ${2:ClassName}",
			"\t$0",
			"end",
		]
  },
  // =============================================================================
  // Functions & Methods
  // =============================================================================
	"function definition": {
		"prefix": "def",
		"body": [
			"def ${1:method_name}",
			"\t$0",
			"end",
		]
  },
	"method definition with docs": {
		"prefix": "deff",
		"body": [
      "# @return [${1:return_type}]",
			"def ${2:method_name}(${3:params})",
			"\t$0",
			"end",
		]
  },
  "initialize": {
		"prefix": "init",
		"body": [
      "# @return [void]",
      "def initialize($1)",
      "$0",
	   "end",
		],
		"description": "Class initializer"
  },
  // ===========================================================================
  // Rails
  // ===========================================================================
  "scopes section": {
    "prefix": "snipscopes",
    "body": [
      "# ==========================================================================",
      "# Scopes",
      "# ==========================================================================",
      "",
      "# @!group Scopes",
      "",
      "# @!endgroup Scopes",
      "",
    ]
  },
  "acrive record scope": {
    "prefix": "yscope",
    "body": [
      "# @!method self.$1()",
      "#   @return [$2::ActiveRecord_Relation]",
      "scope(:$1, -> { where($3) })"
    ]
  },
  // ===========================================================================
  // YARD
  // ===========================================================================
  "yard @return": {
    "prefix": "yret",
    "body": "# @return [$1]$0"
  },
  "yard @param": {
    "prefix": "ypar",
    "body": "# @param $1 [$2] $0"
  },
  "yard @!attribute": {
    "prefix": "yattr",
    "body": [
      "# @!attribute $1 [rw]",
      "#   @return [$0]"
    ]
  },
  // ===========================================================================
  // Misc
  // ===========================================================================
  "block": {
    "prefix": "block",
    "body": "{ |$1| $0 }"
  },
  "Case statement": {
		"prefix": "case",
		"body": [
			"case $1",
			"when $2",
			"when $3",
      "else",
      "\t$0",
			"end",
    ]
	},
	"Exception block": {
		"prefix": "begin",
		"body": [
			"begin",
			"\t$1",
			"rescue StandardError => e",
			"\t",
			"end",
		]
  },
  "if": {
		"prefix": "if",
		"body": [
			"if ${1:test}",
			"\t$0",
			"end",
		]
	},
	"if else": {
		"prefix": "if else",
		"body": [
			"if ${1:test}",
			"\t$0",
			"else",
			"\t",
			"end",
		]
  },
	"unless": {
		"prefix": "unless",
		"body": [
			"unless ${1:test}",
			"\t$0",
			"end",
		]
  },
}
