{
	"Exception block": {
		"prefix": "begin",
		"body": [
			"begin",
			"\t$1",
			"rescue StandardError => e",
			"\t",
			"end"
		]
  },
  "Class definition with initialize": {
		"prefix": "class init",
		"body": [
			"class ${1:ClassName}",
			"\tdef initialize",
			"\t\t$0",
			"\tend",
			"end"
		]
	},
	"Class definition": {
		"prefix": "class",
		"body": [
			"class ${1:ClassName}",
			"\t$0",
			"end"
		]
  },
  "initialize": {
		"prefix": "init",
		"body": [
      "def initialize($1)",
      "$0",
			"end"
		],
		"description": "Class initializer"
  },
  "if": {
		"prefix": "if",
		"body": [
			"if ${1:test}",
			"\t$0",
			"end"
		]
	},
	"if else": {
		"prefix": "if else",
		"body": [
			"if ${1:test}",
			"\t$0",
			"else",
			"\t",
			"end"
		]
  },
  "Case statement": {
		"prefix": "case",
		"body": [
			"case $1",
			"when $2",
			"when $3",
      "else",
      "\t$0",
			"end"
    ]
	},
  "Module definition": {
		"prefix": "module",
		"body": [
			"module ${1:ModuleName}",
			"\t$0",
			"end"
		]
	},
	"unless": {
		"prefix": "unless",
		"body": [
			"unless ${1:test}",
			"\t$0",
			"end"
		]
  },
	"method definition": {
		"prefix": "def",
		"body": [
			"def ${1:method_name}",
			"\t$0",
			"end"
		]
  },
  "yard @return": {
    "prefix": "yret",
    "body": "# @return [$1]$0"
  },
  "yard @param": {
    "prefix": "ypar",
    "body": "# @param $1 [$2] $0"
  },
  "yard @!attribute": {
    "prefix": "yattr",
    "body": [
      "# @!attribute [$1] $2",
      "#   @return [$0]"
    ]
  },
}
