{
  "case": {
    "prefix": "case",
    "body": "case $1 do\n\t$2 ->\n\t\t$0\nend",
    "description": "case",
  },
  "cond": {
    "prefix": "cond",
    "body": "cond do\n\t$1 ->\n\t\t$0\nend",
    "description": "cond",
  },
  "def": {
    "prefix": "def",
    "body": "def $1 do\n\t$0\nend",
    "description": "def",
  },
  "test": {
    "prefix": "test",
    "body": "test $1 do\n\t$0\nend",
    "description": "test",
  },
  "describe": {
    "prefix": "describe",
    "body": "describe $1 do\n\t$0\nend",
    "description": "describe",
  },
  "defc": {
    "prefix": "defcallback",
    "body": "defcallback $1 :: $0",
    "description": "defcallback",
  },
  "defd": {
    "prefix": "defdelegate",
    "body": "defdelegate $1 to: $0",
    "description": "defdelegate",
  },
  "defe": {
    "prefix": "defexception",
    "body": "defexception [${1::message}]",
    "description": "defexception",
  },
  "defi": {
    "prefix": "defimpl",
    "body": "defimpl $1, for: $2 do\n  $0\nend",
    "description": "defimpl",
  },
  "defg": {
    "prefix": "defguard",
    "body": "defguard ${1:guard_name}($2) when $3",
    "description": "defguard",
  },
  "defgp": {
    "prefix": "defguardp",
    "body": "defguardp ${1:guard_name}($2) when $3",
    "description": "defguardp",
  },
  "defm": {
    "prefix": "defmacro",
    "body": "defmacro $1 do\n\t$0\nend",
    "description": "defmacro",
  },
  "defmc": {
    "prefix": "defmacrocallback",
    "body": "defmacrocallback $1 :: $0",
    "description": "defmacrocallback",
  },
  "defmp": {
    "prefix": "defmacrop",
    "body": "defmacrop $1 do\n\t$0\nend",
    "description": "defmacrop",
  },
  "defmod": {
    "prefix": "defmodule",
    "body": "defmodule $1 do\n\t$0\nend",
    "description": "defmodule",
  },
  "defp": {
    "prefix": "defp",
    "body": "defp $1 do\n\t$0\nend",
    "description": "defp",
  },
  "defpro": {
    "prefix": "defprotocol",
    "body": "defprotocol $1 do\n  $0\nend",
    "description": "defprotocol",
  },
  "defs": {
    "prefix": "defstruct",
    "body": "defstruct $1: $2",
    "description": "defstruct",
  },
  "do": {
    "prefix": "do",
    "body": "do\n\t$0\nend",
    "description": "do/end block",
  },
  "doc": {
    "prefix": "@doc",
    "body": "@doc \"\"\"\n$0\n\"\"\"",
    "description": "doc",
  },
  "i": {
    "prefix": "i",
    "body": "inspect($0)",
    "description": "IO.inspect",
  },
  "ii": {
    "prefix": "ii",
    "body": "IO.inspect($0)",
    "description": "IO.inspect",
  },
  "mdoc": {
    "prefix": "@moduledoc",
    "body": "@moduledoc \"\"\"\n$0\n\"\"\"",
    "description": "moduledoc",
  },
  "spec": {
    "prefix": "@spec",
    "body": "@spec $0",
    "description": "spec",
  },
  "rec": {
    "prefix": "receive",
    "body": "receive do\n\t${1:{${2::message_type}, ${3:value}\\}} ->\n    ${0:# code}\nend\n",
    "description": "receive",
  },
  "req": {
    "prefix": "require",
    "body": "require $0",
    "description": "require",
  }
}
