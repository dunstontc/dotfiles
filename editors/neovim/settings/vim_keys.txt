 n  "            @peekaboo#peek(v:count1, '"',  0)
 n  @            @peekaboo#peek(v:count1, '@', 0)
 n  K            @<Plug>ScripteaseHelp
 n  ["          *@:call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
 n  []          *@m':call search('^\s*endf*\%[unction]\>', "bW")<CR>
 n  [[          *@m':call search('^\s*fu\%[nction]\>', "bW")<CR>
 n  ]"          *@:call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
 n  ][          *@m':call search('^\s*endf*\%[unction]\>', "W")<CR>
 n  ]]          *@m':call search('^\s*fu\%[nction]\>', "W")<CR>
 n  y<C-G>      *@:call setreg(v:register, <SNR>50_recall())<CR>
 n  <C-A>         <Plug>SpeedDatingUp
 n  <C-H>       * :TmuxNavigateLeft<CR>
 n  <Tab>       * :<C-U>call tabfold#move_forward_or_toggle_fold()<CR>
 n  <C-J>        * :TmuxNavigateDown<CR>
 n  <C-K>       * :TmuxNavigateUp<CR>
 n  <C-L>       * :TmuxNavigateRight<CR>
 n  <C-P>       * :Unite file_rec/async<CR>
 n  <C-X>         <Plug>SpeedDatingDown
 n  <C-Y>A        <Plug>(emmet-anchorize-summary)
 n  <C-Y>a        <Plug>(emmet-anchorize-url)
 n  <C-Y>k        <Plug>(emmet-remove-tag)
 n  <C-Y>j        <Plug>(emmet-split-join-tag)
 n  <C-Y>/        <Plug>(emmet-toggle-comment)
 n  <C-Y>i        <Plug>(emmet-image-size)
 n  <C-Y>N        <Plug>(emmet-move-prev)
 n  <C-Y>n        <Plug>(emmet-move-next)
 n  <C-Y>D        <Plug>(emmet-balance-tag-outword)
 n  <C-Y>d        <Plug>(emmet-balance-tag-inward)
 n  <C-Y>u        <Plug>(emmet-update-tag)
 n  <C-Y>;        <Plug>(emmet-expand-word)
 n  <C-Y>,        <Plug>(emmet-expand-abbr)
 n  <Esc>       * :noh<CR>
 n  <C-\>       * :TmuxNavigatePrevious<CR>
 n  <Space>/    * :Unite grep:.<CR>
 n  <Space>*      :execute 'noautocmd vimgrep /\V' . substitute(escape(expand("<cword>"), '\'), '\n', '\\n', 'g') . '/ **'<CR>
 n  <Space>tt     <Plug>(table-mode-tableize)
 n  <Space>tm   * :<C-U>call tablemode#Toggle()<CR>
 n  <Space>     * :<C-U>LeaderGuide ' '<CR>
 n  <Space>z    * :call SynStack()<CR>
    <Space>tc   * :TComment<CR>
 n  <Space>]      >>
 n  <Space>[      <<
 n  <Space>q      :q<CR>
    <Space>r    * :redo<CR>
 n  <Space><Space> * <Esc>
 n  %           * :<C-U>call <SNR>98_Match_wrapper('',1,'n') <CR>
 n  ,tc         * :call neoterm#kill()<CR>
 n  ,tl         * :call neoterm#clear()<CR>
 n  ,th         * :call neoterm#close()<CR>
 n  ;           * :
 n  <p          & :call <SNR>75_putline(']p', 'Below')<CR><']
 n  <P          & :call <SNR>75_putline('[p', 'Above')<CR><']
 n  =p          & :call <SNR>75_putline(']p', 'Below')<CR>=']
 n  =P          & :call <SNR>75_putline('[p', 'Above')<CR>=']
 n  =ox         & :set <C-R>=<SNR>75_cursor_options()<CR><CR>
 n  =ov         & :set <C-R>=(&virtualedit =~# "all") ? "virtualedit-=all" : "virtualedit+=all"<CR><CR>
 n  =ow         & :setlocal <C-R>=<SNR>75_toggle("wrap")<CR><CR>
 n  =os         & :setlocal <C-R>=<SNR>75_toggle("spell")<CR><CR>
 n  =or         & :setlocal <C-R>=<SNR>75_toggle("relativenumber")<CR><CR>
 n  =on         & :setlocal <C-R>=<SNR>75_toggle("number")<CR><CR>
 n  =ol         & :setlocal <C-R>=<SNR>75_toggle("list")<CR><CR>
 n  =oi         & :set <C-R>=<SNR>75_toggle("ignorecase")<CR><CR>
 n  =oh         & :set <C-R>=<SNR>75_toggle("hlsearch")<CR><CR>
 n  =od         & :<C-R>=&diff ? "diffoff" : "diffthis"<CR><CR>
 n  =ou         & :setlocal <C-R>=<SNR>75_toggle("cursorcolumn")<CR><CR>
 n  =oc         & :setlocal <C-R>=<SNR>75_toggle("cursorline")<CR><CR>
 n  =ob         & :set background=<C-R>=&background == "dark" ? "light" : "dark"<CR><CR>
 n  >p          & :call <SNR>75_putline(']p', 'Below')<CR>>']
 n  >P          & :call <SNR>75_putline('[p', 'Above')<CR>>']
    D           * "_D<Esc>
    H           * 0
    L           * $
    Q             <Nop>
 n  S             <Plug>Sneak_S
 n  Y             Vy
 n  [%          * :<C-U>call <SNR>98_MultiMatch("bW", "n") <CR>
 n  [xx           <Plug>unimpaired_line_xml_encode
 n  [x            <Plug>unimpaired_xml_encode
 n  [uu           <Plug>unimpaired_line_url_encode
 n  [u            <Plug>unimpaired_url_encode
 n  [yy           <Plug>unimpaired_line_string_encode
 n  [y            <Plug>unimpaired_string_encode
 n  [p            <Plug>unimpairedPutAbove
 n  [ox         & :set cursorline cursorcolumn<CR>
 n  [ov         & :set virtualedit+=all<CR>
 n  [ow         & :setlocal wrap<C-R>=<SNR>75_statusbump()<CR><CR>
 n  [os         & :setlocal spell<C-R>=<SNR>75_statusbump()<CR><CR>
 n  [or         & :setlocal relativenumber<C-R>=<SNR>75_statusbump()<CR><CR>
 n  [on         & :setlocal number<C-R>=<SNR>75_statusbump()<CR><CR>
 n  [ol         & :setlocal list<C-R>=<SNR>75_statusbump()<CR><CR>
 n  [oi         & :set ignorecase<C-R>=<SNR>75_statusbump()<CR><CR>
 n  [oh         & :set hlsearch<C-R>=<SNR>75_statusbump()<CR><CR>
 n  [od         & :diffthis<CR>
 n  [ou         & :setlocal cursorcolumn<C-R>=<SNR>75_statusbump()<CR><CR>
 n  [oc         & :setlocal cursorline<C-R>=<SNR>75_statusbump()<CR><CR>
 n  [ob         & :set background=light<CR>
 n  [e            <Plug>unimpairedMoveUp
 n  [<Space>      <Plug>unimpairedBlankUp
 n  [n            <Plug>unimpairedContextPrevious
 n  [o            <Plug>unimpairedOPrevious
 n  [f            <Plug>unimpairedDirectoryPrevious
 n  [T            <Plug>unimpairedTFirst
 n  [t            <Plug>unimpairedTPrevious
 n  [<C-Q>        <Plug>unimpairedQPFile
 n  [Q            <Plug>unimpairedQFirst
 n  [q            <Plug>unimpairedQPrevious
 n  [<C-L>        <Plug>unimpairedLPFile
 n  [L            <Plug>unimpairedLFirst
 n  [l            <Plug>unimpairedLPrevious
 n  [B            <Plug>unimpairedBFirst
 n  [b            <Plug>unimpairedBPrevious
 n  [A            <Plug>unimpairedAFirst
 n  [a            <Plug>unimpairedAPrevious
 n  \h<Space>   * :Cheat40Open<CR>
 n  ]%          * :<C-U>call <SNR>98_MultiMatch("W",  "n") <CR>
 n  ]xx           <Plug>unimpaired_line_xml_decode
 n  ]x            <Plug>unimpaired_xml_decode
 n  ]uu           <Plug>unimpaired_line_url_decode
 n  ]u            <Plug>unimpaired_url_decode
 n  ]yy           <Plug>unimpaired_line_string_decode
 n  ]y            <Plug>unimpaired_string_decode
 n  ]p            <Plug>unimpairedPutBelow
 n  ]ox         & :set nocursorline nocursorcolumn<CR>
 n  ]ov         & :set virtualedit-=all<CR>
 n  ]ow         & :setlocal nowrap<C-R>=<SNR>75_statusbump()<CR><CR>
 n  ]os         & :setlocal nospell<C-R>=<SNR>75_statusbump()<CR><CR>
 n  ]or         & :setlocal norelativenumber<C-R>=<SNR>75_statusbump()<CR><CR>
 n  ]on         & :setlocal nonumber<C-R>=<SNR>75_statusbump()<CR><CR>
 n  ]ol         & :setlocal nolist<C-R>=<SNR>75_statusbump()<CR><CR>
 n  ]oi         & :set noignorecase<C-R>=<SNR>75_statusbump()<CR><CR>
 n  ]oh         & :set nohlsearch<C-R>=<SNR>75_statusbump()<CR><CR>
 n  ]od         & :diffoff<CR>
 n  ]ou         & :setlocal nocursorcolumn<C-R>=<SNR>75_statusbump()<CR><CR>
 n  ]oc         & :setlocal nocursorline<C-R>=<SNR>75_statusbump()<CR><CR>
 n  ]ob         & :set background=dark<CR>
 n  ]e            <Plug>unimpairedMoveDown
 n  ]<Space>      <Plug>unimpairedBlankDown
 n  ]n            <Plug>unimpairedContextNext
 n  ]o            <Plug>unimpairedONext
 n  ]f            <Plug>unimpairedDirectoryNext
 n  ]T            <Plug>unimpairedTLast
 n  ]t            <Plug>unimpairedTNext
 n  ]<C-Q>        <Plug>unimpairedQNFile
 n  ]Q            <Plug>unimpairedQLast
 n  ]q            <Plug>unimpairedQNext
 n  ]<C-L>        <Plug>unimpairedLNFile
 n  ]L            <Plug>unimpairedLLast
 n  ]l            <Plug>unimpairedLNext
 n  ]B            <Plug>unimpairedBLast
 n  ]b            <Plug>unimpairedBNext
 n  ]A            <Plug>unimpairedALast
 n  ]a            <Plug>unimpairedANext
 n  co            =o
 n  d<C-X>        <Plug>SpeedDatingNowLocal
 n  d<C-A>        <Plug>SpeedDatingNowUTC
    dd          * "_dd<Esc>
    d           * "_d<Esc>
 n  fj          * :wq<CR>
 n  g%          * :<C-U>call <SNR>98_Match_wrapper('',0,'n') <CR>
 n  g!!           <Plug>ScripteaseFilter_
 n  g!            <Plug>ScripteaseFilter
 n  ga            <Plug>(EasyAlign)
 n  s             <Plug>Sneak_s
 n  yO          & :call <SNR>75_setup_paste()<CR>O
 n  yo          & :call <SNR>75_setup_paste()<CR>o
 n  zS            <Plug>ScripteaseSynnames
 n  <S-Tab>     * :<C-U>call tabfold#toggle()<CR>
 n  <BS>        * i<Del><Esc><Right>
    êåô           * :TComment<CR>
 n  êåÉ           * :m .+1<CR>==
 n  êåû           * :m .-2<CR>==
 n  êåã             V"zy"zp$
 n  êåì           * gg0vG$<C-O>
    êåî           * :w<CR>
