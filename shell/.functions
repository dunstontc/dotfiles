# echo "üèÉ .functions"

take() {
  mkdir -p "$1"
  cd "$1" || return
}

# Change working directory to the top-most Finder window location
# `CD-Finder`
cdf() {
  cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')" || return;
}

watdo() {
  alias | grep "$1"
}

# Walk & Talk
cdd() {
  cd "$1" && ls -a
}

komet() {
  git add . && git commit -m "$1"  # TODO: filter the input here
}

forrk() {
  git remote add upstream "$1";
  git remote -v
}

ahead_behind() {
  curr_branch=$(git rev-parse --abbrev-ref HEAD);
  curr_remote=$(git config branch.$curr_branch.remote);
  curr_merge_branch=$(git config branch.$curr_branch.merge | cut -d / -f 3);
  git rev-list --left-right --count $curr_branch...$curr_remote/$curr_merge_branch | tr -s '\t' '|';
}

# activate conda env
condoo() {
  conda source activate "$1"
}
# deactivate conda env
condont() {
  conda source deactivate "$1"
}

kuler() {
  awk 'BEGIN{
    s="/\\/\\/\\/\\/\\"; s=s s s s s s s s;
    for (colnum = 0; colnum<77; colnum++) {
      r = 255-(colnum*255/76);
      g = (colnum*510/76);
      b = (colnum*255/76);
      if (g>255) g = 510-g;
      printf "\033[48;2;%d;%d;%dm", r,g,b;
      printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;
      printf "%s\033[0m", substr(s,colnum+1,1);
    }
    printf "\n";
  }'
}

fn_codes(){
  for x in {1..30}; do echo -n "F$x "; tput kf$x | cat -A; echo; done
}
# armour() {
#   gpg --armor --export $1
# }

# Determine size of a file or total size of a directory
siz() {
  if du -b /dev/null > /dev/null 2>&1; then
    local arg=-sbh;
  else
    local arg=-sh;
  fi
  if [[ -n "$@" ]]; then
    du $arg -- "$@";
  else
    du $arg .[^.]* ./*;
  fi;
}

hdi(){
  howdoi "$*" -c -n 5;
}




# =============================================================================

# # `n` with no arguments opens the current directory in Vim, otherwise opens the given location
# n() {
#   if [ $# -eq 0 ]; then
#     nvim .;
#   else
#     nvim "$@";
#   fi;
# }

# # `o` with no arguments opens the current directory, otherwise opens the given location
# o() {
#   if [ $# -eq 0 ]; then
#     open .;
#   else
#     open "$@";
#   fi;
# }
