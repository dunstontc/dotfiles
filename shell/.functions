# echo "üèÉ .functions"

function take() {
  mkdir -p $1
  cd $1
}

# Change working directory to the top-most Finder window location
function cdf() { # short for `cdfinder`
  cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')";
}

function watdo() {
  alias | grep $1
}

# Walk & Talk
function cdd() {
  cd $1 && ls -a
}

function komet() {
  git add . && git commit -m $1  # TODO: filter the input here
}

function forrk() {
  git remote add upstream $1;
  git remote -v
}

# activate conda env
function condoo() {
  source activate $1
}
# deactivate conda env
function condont() {
  source deactivate $1
}

function kuler() {
  awk 'BEGIN{
    s="/\\/\\/\\/\\/\\"; s=s s s s s s s s;
    for (colnum = 0; colnum<77; colnum++) {
      r = 255-(colnum*255/76);
      g = (colnum*510/76);
      b = (colnum*255/76);
      if (g>255) g = 510-g;
      printf "\033[48;2;%d;%d;%dm", r,g,b;
      printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;
      printf "%s\033[0m", substr(s,colnum+1,1);
    }
    printf "\n";
  }'
}
# function armour() {
#   gpg --armor --export $1
# }

# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}

function hdi(){
  howdoi $* -c -n 5;
}

# =============================================================================

# # `n` with no arguments opens the current directory in Vim, otherwise opens the given location
# function n() {
# 	if [ $# -eq 0 ]; then
# 		nvim .;
# 	else
# 		nvim "$@";
# 	fi;
# }

# # `o` with no arguments opens the current directory, otherwise opens the given location
# function o() {
# 	if [ $# -eq 0 ]; then
# 		open .;
# 	else
# 		open "$@";
# 	fi;
# }
