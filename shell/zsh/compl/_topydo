#compdef topydo
#autoload
# in order to make this work, you will need to have the topydo

# adb zsh completion, based on adb completion

local -a expl _todo_numbers _todo_contexts _todo_projects ret
_topydo_todo_numbers() {
	_todo_numbers=("${(f)$(topydo ls -F "%i: %s")}")
	# _todo_numbers=("${(f)$(_call_program todonumbers topydo ls -F "%i:%s")}")

}

_topydo_todo_contexts() {
	_todo_contexts=("${(f)$(_call_program todocontexts topydo lscon)}")
}

_topydo_todo_projects() {
	_todo_projects=("${(f)$(_call_program todoprojects topydo lsprj)}")
}

_topydo_subcommand() {
	integer ret=1
	case "$words[1]" in
		rm|del|app|append|do|edit|pri|depri)
			_topydo_todo_numbers
			# _wanted todo_numbers expl 'todo number' compadd -Q -a _todo_numbers && ret=0
			_describe -t todo_numbers 'todo number' _todo_numbers && ret=0
			;;

		ls|add)
			case "${words[$CURRENT]:0:1}" in
				"@")
					_topydo_todo_contexts
					_wanted todo_contexts expl 'todo context' compadd -p '@' -a _todo_contexts && ret=0
					;;
				"+")
					_topydo_todo_projects
					_wanted todo_projects expl 'todo projects' compadd -p '+' -a _todo_projects && ret=0
					;;
			esac
			;;
	esac
	return $ret
}

local -a _1st_arguments
_1st_arguments=(
	'add:Adds a new todo item to your list.'
	{app,append}':Appends a text to the given todo item.'
	'archive:Trigger a manual archiving action.'
	'columns:Starts topydo in column mode.'
	{del,rm}':Deletes the todo item(s) with the given number(s) from the list.'
	'dep:Handles dependencies between todo items.'
	'depri:Removes the priority of the given todo item(s).'
	'do:Marks one or more todo items as complete.'
	'edit:The edit subcommand launches a text editor to edit todo items.'
	'help:Prints help texts for each subcommand.'
	'ls:Lists all (relevant) todo items.'
	{listcon,lscon}':Prints a sorted list of all contexts in the todo.txt file.'
	{lsprj,listprojects}':Prints a sorted list of all projects in the todo.txt file.'
	'postpone:Postpone todo item(s).'
	'pri:Sets the priority of todo(s) the given number(s) to the given priority.'
	'prompt:Starts topydo in prompt mode.'
	'revert:Reverts the last command.'
	'sort:Sorts the todo.txt file according to the given sort expression.'
	'tag:Add or remove tags from items.'
)

_arguments \
	'*:: :->subcmds' && return 0

if (( CURRENT == 1 )); then
	_describe -t commands "topydo command" _1st_arguments
	return
fi

_topydo_subcommand

# vim ft=zsh
